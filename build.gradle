buildscript {
	ext {
		springBootVersion = '1.4.1.RELEASE'
	}
	repositories {
		//jfrog artifactory repo
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		//jfrog dependency
		classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '4.4.0')

	}
}

//jfrog artifactory plugin
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'

group = 'com.allstate.hello'
version = '1.0'
archivesBaseName = 'hello-allie'

if (System.env.HELLO_VERSION) {
	version = "${System.env.HELLO_VERSION}"
}
jar {
	baseName = archivesBaseName
	version = version
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

//plugins {
	//id "com.jfrog.artifactory" version "4.4.0"
//}
repositories {
	jcenter()
}
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

publishing {
	publications {
		main(MavenPublication) {
			from components.java
			artifact sourcesJar
		//	artifacts = ["build/libs/hello-allie-${version}.jar"]
		}
	}
}
artifactory {
	contextUrl = 'http://ec2-54-187-110-243.us-west-2.compute.amazonaws.com:8081/artifactory'
	resolve {
		repository {
			repoKey = 'libs-release'
		}
	}
	publish {
		repository {
			repoKey = 'libs-snapshot-local'
			username = 'admin'
			password = 'password'
		}
		defaults {
			publications 'main'
		}
	}

}

task zipArchive(type: Zip) {
	from 'ci/'
	include '*'
	include '*/*' //to include contents of a folder
	from 'config/Test'
	include '*'
	archiveName 'now-s3.zip'
	destinationDir(file('dir/'))
}

task s3Upload(type: Exec){
	//define location of s3 upload script
	def s3Upload="/apps/allstate/s3upload.sh"
	//defined name of file to be uploaded
	def artifactName = archivesBaseName + "-${System.env.HELLO_VERSION}.jar"
	//define path of project where artifact is located
	def localDist = "build/libs/${artifactName}";

	// Moves the distribution file to the right S3 bucket
	executable "bash"
	args "-c", "sh ${s3Upload} ${localDist}"
}

dependencies {
	//compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile('org.springframework.boot:spring-boot-starter-data-neo4j')
	compile('org.springframework.boot:spring-boot-starter-web')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
